The ``4-print_square`` module
======================

This is a text file in reStructuredText format to test the above module.

Using ``print_square``
-------------------

First import ``print_square`` from the ``4-print_square`` module:

    >>> print_square = __import__('4-print_square').print_square

Now use it:

    >>> print_square(3)
    ###
    ###
    ###

Check it prints out something of the right size, no extra space or new line

    >>> print_square(10)	        #doctest: +REPORT_NDIFF
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########

It should return a new line if n = 0

   >>> print_square(0)
   <BLANKLINE>


It works only for integers >= 0

    >>> def test_exceptions(func, tests):
    ...     for test in tests:
    ...         try:
    ...             func(test)
    ...         except Exception as e:
    ...             pass
    ...		    print("Failed with {} for input {}".format(type(e).__name__, type(test)))
    ...         else:
    ...             print("Did not fail for input {}".format(test))
    ... 

Trying other types
    >>> tests = [2.3, "a string", [1, 2], set("abracadabra"), {"a":1, "b":4.5}, test_exceptions, range(5), b'byte literal', None] 

    >>> test_exceptions(print_square, tests)
    Failed with TypeError for input <class 'float'>
    Failed with TypeError for input <class 'str'>
    Failed with TypeError for input <class 'list'>
    Failed with TypeError for input <class 'set'>
    Failed with TypeError for input <class 'dict'>
    Failed with TypeError for input <class 'function'>
    Failed with TypeError for input <class 'range'>
    Failed with TypeError for input <class 'bytes'>
    Failed with TypeError for input <class 'NoneType'>

Trying bad values
    >>> tests = [-1, -3.4]
    >>> test_exceptions(print_square, tests)
    Failed with ValueError for input <class 'int'>
    Failed with TypeError for input <class 'float'>

It requires an argument
    >>> print_square()
    Traceback (most recent call last):
    TypeError: print_square() missing 1 required positional argument: 'size'

    >>> print_square(1, 2)
    Traceback (most recent call last):
    TypeError: print_square() takes 1 positional argument but 2 were given
